syntax = "proto3";

package Domic.Core.Company.Grpc;

/*-------------------------------------------------------------------*/

//CheckExist

message CheckExistRequest {
  String id = 1;
}

message CheckExistResponse {
  bool result = 1;
}

/*-------------------------------------------------------------------*/

//ReadOne

message ReadOneRequest {
  String id = 1;
}

message ReadOneResponse {
  int32 code               = 1;
  string message           = 2;
  ReadOneResponseBody body = 3;
}

message ReadOneResponseBody {
  string company = 1; //Serialized
}

/*-------------------------------------------------------------------*/

//ReadAllPaginate

message ReadAllPaginatedRequest {
  Int32 page_number    = 1;
  Int32 count_per_page = 2;
}

message ReadAllPaginatedResponse {
  int32 code                       = 1;
  string message                   = 2;
  ReadAllPaginatedResponseBody body = 3;
}

message ReadAllPaginatedResponseBody {
  string companies = 1; //Serialized
}

/*-------------------------------------------------------------------*/

//Create

message CreateRequest {
  String name = 1;
  String description = 2;
  String field = 3;
  Int32 size = 4;
  String website_url = 5;
  String image_path = 6;
}

message CreateResponse {
  int32 code              = 1;
  string message          = 2;
  CreateResponseBody body = 3;
}

message CreateResponseBody {
  string company_id = 1;
}

/*-------------------------------------------------------------------*/

//Update

message UpdateRequest {
  String id = 1;
  String name = 2;
  String description = 3;
  String field = 4;
  Int32 size = 5;
  String website_url = 6;
  String image_path = 7;
}

message UpdateResponse {
  int32 code              = 1;
  string message          = 2;
  UpdateResponseBody body = 3;
}

message UpdateResponseBody {
  string company_id = 1;
}

/*-------------------------------------------------------------------*/

//Active

message ActiveRequest {
  String id = 1;
}

message ActiveResponse {
  int32 code              = 1;
  string message          = 2;
  ActiveResponseBody body = 3;
}

message ActiveResponseBody {
  string company_id = 1;
}

/*-------------------------------------------------------------------*/

//InActive

message InActiveRequest {
  String id = 1;
}

message InActiveResponse {
  int32 code                = 1;
  string message            = 2;
  InActiveResponseBody body = 3;
}

message InActiveResponseBody {
  string company_id = 1;
}

/*-------------------------------------------------------------------*/

//Delete

message DeleteRequest {
  String id = 1;
}

message DeleteResponse {
  int32 code              = 1;
  string message          = 2;
  DeleteResponseBody body = 3;
}

message DeleteResponseBody {
  string company_id = 1;
}

/*-------------------------------------------------------------------*/

//Global

message String { string value = 1; }
message Int32  { int32  value = 1; }

/*-------------------------------------------------------------------*/

service CompanyService {

  rpc CheckExist(CheckExistRequest) returns (CheckExistResponse) {}

  rpc ReadOne(ReadOneRequest) returns (ReadOneResponse) {};

  rpc ReadAllPaginate(ReadAllPaginatedRequest) returns (ReadAllPaginatedResponse) {};

  rpc Create(CreateRequest) returns (CreateResponse) {};
  
  rpc Update(UpdateRequest) returns (UpdateResponse) {};

  rpc Active(ActiveRequest) returns (ActiveResponse) {};

  rpc InActive(InActiveRequest) returns (InActiveResponse) {};

  rpc Delete(DeleteRequest) returns (DeleteResponse) {};

}